#!/usr/bin/env bash
set -eu

function package_lambda() {
  local -r project="$1"

  echo 1>&2
  pushd "$project"
    build "$project" dist/package
    create_package
  popd
}

function package_layer() {
  local -r project="$1"

  echo 1>&2
  pushd "layers/$project"
    build "$project" dist/package/python
    create_package
  popd
}

function build() {
  local -r project="$1"
  local -r target="$2"

  rm -rf dist
  poetry install --sync
  poetry build --format=wheel
  poetry export --format=requirements.txt --output=dist/requirements.txt
  poetry run pip install --no-compile --target "$target" --requirement dist/requirements.txt
  unzip -q "dist/${project//-/_}-$(poetry version --short)-*.whl" -d "$target"
}

function create_package() {
  pushd dist/package
    zip -q -r ../bundle.zip . -x "bin/*"
  popd
}

function package_layers() {
  find layers -name poetry.lock > tmp
  while IFS= read -r file; do
    package_layer "$(basename "$(dirname "$file")")"
  done < tmp
  rm tmp
}

function package_lambdas() {
  find . -name poetry.lock ! -path "*/layers/*" > tmp
  while IFS= read -r file; do
    package_lambda "$(basename "$(dirname "$file")")"
  done < tmp
  rm tmp
}

function main() {
  package_layers
  package_lambdas
}

main "$@"
